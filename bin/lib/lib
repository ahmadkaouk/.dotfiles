#!/usr/bin/env bash

## \mainpage
## \section Introduction
## The os_lib that acts as a library for bash scripts. It provides
## a couple of functions related to OS
##
## @file
## @author Ahmad KAOUK <ahmadkaouk.93@gmail.com>
## @brief OS Function Library

## @defgroup system System
## @defgroup log Log

#################################################################
# ENVIRONEMENT
#################################################################
## @var USEROS 
##"@brief $(uname)" (read-only)
## @details running operating system name.
declare -rx USER_OS="$(uname)" 2>/dev/null;

## @var LINUX_OS
## @brief ( Linux FreeBSD OpenBSD SunOS ) (read-only)
## @details List of Linux-like OSs.
declare -rxa LINUX_OS="(Linux FreeBSD OpenBSD SunOS)" 2>/dev/null;

#################################################################
# ENVIRONEMENT
#################################################################
## @function


## functions
## @function

## Log info message
echo_info() {
    local msg="$1"; shift
    printf "\e[1;32m%s\e[0m\\n" "$msg"
}

echo_error(){
    local msg="$1";
    printf "\e[1;31mError: %s\e[0m\\n" "$msg" 1>&2
}

install_or_update_brew(){
    if  [[ ! "$(command -v brew)" ]] ; then
        echo_info "Installing homebrew..."
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    else
        echo_info "Updating Homebrew..."
        brew update
    fi
}

install_packages_osx(){
    # Install Packages defined in Brewfile
    echo_info "OSX packages..."
    install_or_update_brew
    brew bundle

    # Remove outdated versions from the cellar
    echo_info "Cleaning up..."
    brew cleanup

    echo_info "Package Installation complete"
}

install_packages_ubuntu(){
    ## Fundamentals
    sudo apt install coreutils
    sudo apt install git
    sudo apt install python3
    sudo apt install nodejs
    sudo apt install npm

    ## SHELL
    sudo apt install zsh

    # Utilities
    sudo apt install tmux
    sudo apt install tree
    sudo apt install htop
    sudo apt install ytop

    # FIND
    sudo apt install fzf
    sudo apt install ripgrep
    sudo apt install silversearcher-ag
    sudo apt install fd-find

    # Neovim
    sudo apt install neovim
    sudo apt install universal-ctags

    # Dev
    sudo apt install lazygit 
    sudo apt install lazydocker
}

install_vs_code(){
    # Install VS Code
    [ "$(uname)" == "Darwin" ] && brew cask install visual-studio-code
    [  -n "$(uname -a | grep Ubuntu)" ] && sudo apt install visual-studio-code

    # Installing VS code Extensions
    echo_info "Installing Extensions for Vscode..."
    local extensions=(
    akamud.vscode-theme-onedark
    jolaleye.horizon-theme-vscode
    ms-vscode-remote.remote-containers
    ms-vscode-remote.remote-ssh
    ms-vscode-remote.remote-ssh-edit
    ms-vscode-remote.vscode-remote-extensionpack
    ms-vscode.cpptools
    PKief.material-icon-theme
    rafamel.subtle-brackets
    timonwong.shellcheck
)

for extension in "${extensions[@]}"; do
    if ! code --list-extensions | grep "$extension" > /dev/null; then
        code --install-extension "$extension" 
    fi
done
}

zsh_config(){
    local shell_path;
    shell_path="$(command -v zsh)"
    # make zsh default shell
    if ! grep "$shell_path" /etc/shells > /dev/null; then
        sudo sh -c "echo ${shell_path} >> /etc/shells"
    fi
    chsh -s "$shell_path"

  # install oh-my-zsh
  local OMZ_DIR="${HOME}/.oh-my-zsh"
  if [[ ! -d "$OMZ_DIR" ]]; then
      sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
  fi

  # Install zsh plugins:
  # - spaceship-prompt
  # - zsh-autosuggestions
  if [[ ! -d "${ZSH_CUSTOM}/themes/spaceship-prompt" ]]; then
      git clone https://github.com/denysdovhan/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt"
      ln -s "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme" "$ZSH_CUSTOM/themes/spaceship.zsh-theme"
  fi
  if [[ ! -d "${ZSH_CUSTOM}/plugins/zsh-autosuggestions" ]]; then
      git clone https://github.com/zsh-users/zsh-autosuggestions "${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions"
  fi
}
